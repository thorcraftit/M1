Function txtProjectAreaID_SearchClick()
	If Trim(Controls("txtQmpProjectID").Value) <> "" Then 
		Controls("txtProjectAreaID").Search.AdditionalFilter = "praProjectID = " & App.Convert.StringToSql(Controls("txtQmpProjectID").Value)
	Else
		Controls("txtProjectAreaID").Search.AdditionalFilter = ""
	End If
End Function

Function cmdImportRooms_Click(sender, e)
	If (Trim(Controls("txtQmpProjectID").Value) <> "" AND Trim(Controls("txtProjectAreaID").Value) <> "") _
		Or (Trim(Controls("txtQmpProjectID").Value) = "" AND Trim(Controls("txtProjectAreaID").Value) = "") Then
		If this.SaveView = 0 Then

			vbsCabinetVisionByRoomImport.OpenDatabases
			
			if vbsCabinetVisionByRoomImport.isLaborEnabled() then
				QuoteLines = vbsCabinetVisionByRoomImport.CreateProjectQuoteLines(Controls("txtqmpQuoteID").Value, _
									 																										 Controls("txtQmpProjectID").Value, _
									 																										 Controls("txtProjectAreaID").Value, _
																																				cint(controls("optImportType").ValueString))

				For Each QuoteLineID In QuoteLines 
					vbsUpdateRevisedPrice.UpdateRevisedPrices Controls("txtQmpQuoteID").Value, QuoteLineID
					'vbsUpdateRevisedPrice.ForeRefreshTaxes Controls("txtQmpQuoteID").Value, QuoteLineID
				Next

			else
				msgbox "Please enable pricing in Cabinet Vision before generating quote data.", _
				       vbExclamation + vbOkOnly, _
               "Error in Import Process"
			end if
				
			vbsCabinetVisionByRoomImport.CloseDatabases
			this.OnDataChanged(3)
				
		End If
	Else
		Msgbox "If you have a Project ID, you are required to enter a Project Area ID. " & _
				   "If you enter a Project Area ID, you must have a Project ID.", _
				   vbExclamation + vbOkOnly, _
			     "Error in Import Process"
	End If
End Function

Function chkPaymentScheduled_ValueChanged(sender, e)
	If controls("chkPaymentScheduled").value = 0 Then
		controls("txtUQmpDepositAmount").value = 0
		controls("txtUqmpSecondPaymentAmount").value = 0
		controls("txtUqmpPaymentDeliveryAmount").value = 0		
	End If	
End Function

Function chkBuilderCredit_ValueChanged(sender, e)
	If controls("chkBuilderCredit").value = false Then
		controls("txtBuilderCreditID").value = ""
	End If	
End Function

Function UpdateCustomerName()
	Dim rsCustLookup
	Set rsCustLookup = CreateObject("ADODB.Recordset")
	rsCustLookup.Open " select cmlName from OrganizationLocations where cmlOrganizationID = " + _
										  App.Convert.StringToSql(controls("txtQmpShipOrganizationID").Value) + _
										" and cmlLocationID = " + App.Convert.StringToSql(controls("txtQmpShipLocationID").value), _
											Connection,adOpenStatic,adLockReadOnly,adCmdText
	If rsCustLookup.EOF = False Then
		Controls("txtuqmpCustomerName").Value = rsCustLookup.Fields("cmlName").Value
	End If
	rsCustLookup.Close
end function

Function txtQmpShipOrganizationID_UserChange(sender, e)
	UpdateCustomerName
End Function

Function txtQmpShipLocationID_UserChange(sender, e)
	UpdateCustomerName
End Function

Function M1DataControl_RecordChange(sender, e)
    UpdateCustomerName
		controls("optImportType").ValueString = 1
End Function

Function M1DataControl_SaveDataCompleted(sender, e)
  UpdateCustomerName
	UpdateProjectOnQuoteLines
	this.OnDataChanged(3)
End Function
'----------End tree name customization
	
'----------Automatically copy Project ID to quote lines
function txtQmpProjectID_UserChange(sender, e) 
	UpdateProjectOnQuoteLines
end function

function UpdateProjectOnQuoteLines ()
	if trim(controls("txtQmpQuoteID").value) <> "" then	
		Connection.Execute ( _
		"	Update quotelines" & _
		"	set qmlprojectID = " & App.Convert.StringToSql(controls("txtQmpProjectID").value) & _
		"	where qmlQuoteID = " & App.Convert.StringToSql(controls("txtQmpQuoteID").value) & _
		"  			and qmlProjectID <> " & App.Convert.StringToSql(controls("txtQmpProjectID").value))
	else
		Msgbox "Please set the Quote ID", _
				   vbExclamation + vbOkOnly, _
			     "Error"
	end if
end function	
'----------End automatically copy Project ID to quote lines
'---------------------------------
Function this_initialize(sender, e)
	includeScript "vbsCabinetVisionByRoomImport"
	includeScript "vbsUpdateRevisedPrice"

	controls("optImportType").ValueString = 1	
end function

