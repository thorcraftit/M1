Function this_initialize(sender, e)
	includeScript "vbsCabinetVisionByRoomImport"
	includeScript "vbsUpdateRevisedPrice"

	controls("optImportType").ValueString = 1	
end function

Function txtProjectAreaID_SearchClick()
	If Trim(Controls("txtQmpProjectID").Value) <> "" Then 
		Controls("txtProjectAreaID").Search.AdditionalFilter = "praProjectID = " & App.Convert.StringToSql(Controls("txtQmpProjectID").Value)
	Else
		Controls("txtProjectAreaID").Search.AdditionalFilter = ""
	End If
End Function

Function cmdImportRooms_Click(sender, e)
	If (Trim(Controls("txtQmpProjectID").Value) <> "" AND Trim(Controls("txtProjectAreaID").Value) <> "") _
		Or (Trim(Controls("txtQmpProjectID").Value) = "" AND Trim(Controls("txtProjectAreaID").Value) = "") Then
		If this.SaveView = 0 Then

			vbsCabinetVisionByRoomImport.OpenDatabases
			
			if vbsCabinetVisionByRoomImport.isLaborEnabled() then
				QuoteLines = vbsCabinetVisionByRoomImport.CreateProjectQuoteLines(Controls("txtqmpQuoteID").Value, _
									 																										 Controls("txtQmpProjectID").Value, _
									 																										 Controls("txtProjectAreaID").Value, _
																																				cint(controls("optImportType").ValueString))

				For Each QuoteLineID In QuoteLines 
					vbsUpdateRevisedPrice.UpdateRevisedPrices Controls("txtQmpQuoteID").Value, QuoteLineID
					'vbsUpdateRevisedPrice.ForeRefreshTaxes Controls("txtQmpQuoteID").Value, QuoteLineID
				Next

			else
				msgbox "Please enable pricing in Cabinet Vision before generating quote data.", _
				       vbExclamation + vbOkOnly, _
               "Error in Import Process"
			end if
				
			vbsCabinetVisionByRoomImport.CloseDatabases
			this.OnDataChanged(3)
				
		End If
	Else
		Msgbox "If you have a Project ID, you are required to enter a Project Area ID. " & _
				   "If you enter a Project Area ID, you must have a Project ID.", _
				   vbExclamation + vbOkOnly, _
			     "Error in Import Process"
	End If
End Function

Function chkPaymentScheduled_ValueChanged(sender, e)
	If controls("chkPaymentScheduled").value = 0 Then
		controls("txtUQmpDepositAmount").value = 0
		controls("txtUqmpSecondPaymentAmount").value = 0
		controls("txtUqmpPaymentDeliveryAmount").value = 0		
	End If	
End Function

Function chkBuilderCredit_ValueChanged(sender, e)
	If controls("chkBuilderCredit").value = false Then
		controls("txtBuilderCreditID").value = ""
	End If	
End Function

Function UpdateCustomerName(ByVal QuoteID, ByVal OrganizationLocationID, ByVal LocationID)
	Dim rsCustLookup
	Set rsCustLookup = CreateObject("ADODB.Recordset")
	rsCustLookup.Open "	select cmlName " & _
										"	from OrganizationLocations " & _
										"	where cmlOrganizationID = " & App.Convert.StringToSql(OrganizationLocationID) & _
										" 	 and cmlLocationID = " & App.Convert.StringToSql(LocationID), _
											Connection,adOpenStatic,adLockReadOnly,adCmdText
	If not rsCustLookup.EOF Then
		dim rsQuote
		set rsQuote = CreateObject("ADODB.Recordset")
		rsQuote.open	"	select qmpQuoteID, uqmpCustomerName from Quotes " & _
									"	where qmpQuoteID = " & App.Convert.StringToSql(QuoteID), _
									Connection,adOpenStatic,adLockReadOnly,adCmdText
		if not rsQuote.EOF then
			if rsQuote.fields("uqmpCustomerName").value <> rsCustLookup.fields("cmlName").value then 
				rsQuote.fields("uqmpCustomerName").value = rsCustLookup.fields("cmlName").value
				rsQuote.UpdateBatch
			end if
			
		end if	
	end if

	rsCustLookup.Close
	this.OnDataChanged(3)
end function

Function M1DataControl_SaveDataCompleted(sender, e)
	if trim(controls("txtqmpQuoteID").value) <> "" then
		UpdateCustomerName	controls("txtQmpQuoteID").value, _
												controls("txtQmpShipOrganizationID").Value, _
												controls("txtQmpShipLocationID").value
		UpdateProjectOnQuoteLines controls("txtqmpQuoteID").value, controls("txtQmpProjectID").value
	end if
End Function
	
function UpdateProjectOnQuoteLines(ByVal QuoteID, ByVal ProjectID) 
	
	dim rsQuoteLines
	Set rsQuoteLines = CreateObject("ADODB.Recordset")
		
	rsQuoteLines.Open "	select qmlQuoteID, qmlQuoteLineID, qmlProjectID " & _
										"	from QuoteLines	" & _
										"	where qmlQuoteID = " & app.convert.NumberToSql(QuoteID) & _
										"	order by qmlQuoteLineID", _
										Connection,adOpenStatic,adLockReadOnly,adCmdText
	if not rsQuoteLines.EOF then
		do while not rsQuotelines.EOF
			rsQuotelines.Fields("qmlProjectID").value = ProjectID
			rsQuotelines.MoveNext()
		loop
		rsQuoteLines.UpdateBatch
	end if

end function 
		
		
